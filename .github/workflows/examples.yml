name: Example operations

on: [push]

jobs:
  build:
    permissions:
      contents: read
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.10', '3.12']
    defaults:
      run:
        working-directory: src
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install
      run: pip3 install -e .
    - name: Lint with flake8
      run: |
        pip3 install .[flake8]
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: BPSec examples
      run: |
        pip3 install .[test]
        python3 -m pytest . --capture=no
    - name: PKI examples
      run: |
        python3 -m bpsec_cose.pki.run
        openssl ec -in bpsec_cose/pki/data/ca/key.pem
        openssl x509 -text -in bpsec_cose/pki/data/ca/cert.pem
        openssl x509 -text -in bpsec_cose/pki/data/nodes/src/ssl/certs/node-sign.pem
        openssl x509 -text -in bpsec_cose/pki/data/nodes/dst/ssl/certs/node-encrypt.pem
        openssl verify \
          -attime $(date -d '2025-10-07T00:00:00Z' +'%s') \
          -x509_strict -show_chain \
          -CAfile bpsec_cose/pki/data/ca/cert.pem \
          bpsec_cose/pki/data/nodes/src/ssl/certs/node-sign.pem \
          bpsec_cose/pki/data/nodes/dst/ssl/certs/node-encrypt.pem
